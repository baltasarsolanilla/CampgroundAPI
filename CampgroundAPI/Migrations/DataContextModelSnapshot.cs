// <auto-generated />
using System;
using CampgroundAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampgroundAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CampgroundAPI.Models.Campground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GeometryId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeometryId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Campgrounds");
                });

            modelBuilder.Entity("CampgroundAPI.Models.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CampgroundId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampgroundId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("CampgroundAPI.Models.Geometry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Geometries");
                });

            modelBuilder.Entity("CampgroundAPI.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ASSET_DESC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ASSET_OWNE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HERITAGE_V")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MGA_EASTIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MGA_NORTHI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MGA_ZONE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SITE_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("CampgroundAPI.Models.Campground", b =>
                {
                    b.HasOne("CampgroundAPI.Models.Geometry", "Geometry")
                        .WithMany()
                        .HasForeignKey("GeometryId");

                    b.HasOne("CampgroundAPI.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId");

                    b.Navigation("Geometry");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("CampgroundAPI.Models.Favourite", b =>
                {
                    b.HasOne("CampgroundAPI.Models.Campground", "Campground")
                        .WithMany()
                        .HasForeignKey("CampgroundId");

                    b.Navigation("Campground");
                });
#pragma warning restore 612, 618
        }
    }
}
